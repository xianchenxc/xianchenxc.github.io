{"version":3,"file":"component---src-pages-index-js-d02e4c0bde4d0d2bd0b6.js","mappings":"+IA0DA,IA/CYA,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACjCG,EAA+B,QAAzBN,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,YAAAC,EAAA,SAEtBf,aAAM,EAANA,EAAQgB,OACPZ,EAAAA,cAAA,SAAG,mBACgB,IACjBA,EAAAA,cAAA,KAAGa,KAAI,yBAAyBd,aAAM,EAANA,EAAQe,UAAO,KAC7Cd,EAAAA,cAAA,cAASJ,EAAOgB,OACd,IACHZ,EAAAA,cAAA,YACAJ,aAAM,EAANA,EAAQmB,UAAW,MAGpB,C,oFCgBV,UA/DkBC,IAAyB,IAADxB,EAAA,IAAvB,KAAEE,EAAI,SAAEuB,GAAUD,EACnC,MAAME,GAAkC,QAAtB1B,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwB2B,QAAK,QACzCC,EAAQ1B,EAAK2B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENvB,EAAAA,cAACwB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjClB,EAAAA,cAACyB,EAAAA,EAAG,CAACN,MAAM,cACXnB,EAAAA,cAACT,EAAAA,EAAG,MACJS,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACwB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjClB,EAAAA,cAACyB,EAAAA,EAAG,CAACN,MAAM,cACXnB,EAAAA,cAACT,EAAAA,EAAG,MACJS,EAAAA,cAAA,MAAI0B,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAIC,IAAS,IAADC,EACjB,MAAMX,EAAQU,EAAKE,YAAYZ,OAASU,EAAKG,OAAOC,KAEpD,OACEjC,EAAAA,cAAA,MAAIkC,IAAKL,EAAKG,OAAOC,MACnBjC,EAAAA,cAAA,WACEC,UAAU,iBACVkC,WAAS,EACTC,SAAS,6BAETpC,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACqC,EAAAA,KAAI,CAACC,GAAIT,EAAKG,OAAOC,KAAMM,SAAS,OACnCvC,EAAAA,cAAA,QAAMuC,SAAS,YAAYpB,KAG/BnB,EAAAA,cAAA,KAAGC,UAAU,uBACW,QADU6B,EAC/BD,EAAKE,YAAYS,YAAI,IAAAV,OAAA,EAArBA,EAAuBF,KAAIa,GAC1BzC,EAAAA,cAAA,QAAMkC,IAAKO,EAAKxC,UAAU,sBAAsBwC,MAGpDzC,EAAAA,cAAA,aAAQ6B,EAAKE,YAAYW,OAE3B1C,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACE2C,wBAAyB,CACvBC,OAAQf,EAAKE,YAAYc,aAAehB,EAAKiB,SAE/CP,SAAS,kBAIZ,KAIJ,C","sources":["webpack://hello-blog/./src/components/bio.js","webpack://hello-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Personal Blog by{\" \"}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            <strong>{author.name}</strong>\n          </a>\n          .<br />\n          {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <p className=\"post-list-item-tags\">\n                    {post.frontmatter.tags?.map(tag => (\n                      <span key={tag} className=\"post-list-item-tag\">{tag}</span>\n                    ))}\n                  </p>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","href","twitter","summary","_ref","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","Seo","style","listStyle","map","post","_post$frontmatter$tag","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","tags","tag","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}