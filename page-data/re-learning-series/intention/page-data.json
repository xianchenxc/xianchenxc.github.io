{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/re-learning-series/intention/",
    "result": {"data":{"site":{"siteMetadata":{"title":"HelloCode"}},"markdownRemark":{"id":"58774d13-5aa7-5772-80cd-b3a9a0aa4ff8","excerpt":"我大学主修电子信息工程专业，虽然必修课也修习过 C、C++，甚至选修过 Java，但是刚毕业时对于编程一知半解，所以选择成为通信软件解决方案（BOSS…","html":"<p>我大学主修电子信息工程专业，虽然必修课也修习过 C、C++，甚至选修过 Java，但是刚毕业时对于编程一知半解，所以选择成为通信软件解决方案（BOSS）的运维工程师。</p>\n<p>后因为工作原因，经常接触数据库脚本开发，对于编程萌生了一些兴趣，不可否认也是因为轻度社恐（觉得面对代码比面对“社会人”要轻松很多），所以转行成为一个前端开发工程师，目前就职于一家 toB 的创业公司。</p>\n<p>又过四年有余，开发经验有所积累，公司职位也有所增长，但是总感觉自己技术能力增长缓慢，尤其近 1-2 年更甚。在平常逛的技术社区，关注的技术方向，逐渐发现自己能看懂的越来越少，大多一知半解，比如：React-Native 的架构升级、JS 引擎 QuickJS 和 Hermes 的设计目的、跨端设计与实现、布局算法与优化等等，于是进入到技术焦虑、自我怀疑😑。</p>\n<p>从去年开始，尝试阅读 QuickJS 源码，收获了很多，但也逐渐意识到自身的问题 —— 计算机基础差。数据结构和算法没有系统地学习，操作系统、计算机组成原理、图形学相关几乎两眼一抹黑，编译原理因为当年啃 babel，买了龙书看过一些，但也仅限于此。</p>\n<p>所以，准备【重学】计算机基础，既希望能夯实基础，同时也可以从中获取一些灵感去理解框架设计。</p>\n<p>📝谨以此文字记录一二。</p>","frontmatter":{"title":"重学系列-意图","date":"September 04, 2021","description":"一个非 CS 专业的前端，在代码的世界中遇到的一些困惑、问题，以及讲述【重学系列】的意图。"}},"previous":null,"next":null},"pageContext":{"id":"58774d13-5aa7-5772-80cd-b3a9a0aa4ff8","previousPostId":null,"nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}