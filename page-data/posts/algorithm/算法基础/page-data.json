{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algorithm/算法基础","result":{"data":{"markdownRemark":{"id":"0c9b8461-8aef-5693-87ac-0588e0fcbfc0","html":"<h2 id=\"描述算法\" style=\"position:relative;\"><a href=\"#%E6%8F%8F%E8%BF%B0%E7%AE%97%E6%B3%95\" aria-label=\"描述算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>描述算法</h2>\n<p>伪代码</p>\n<h2 id=\"分析算法\" style=\"position:relative;\"><a href=\"#%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95\" aria-label=\"分析算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分析算法</h2>\n<p>分析算法的结果意味着预测算法需要的<strong>资源</strong>。</p>\n<ol>\n<li>主要关注点</li>\n</ol>\n<p>虽然我们也关心内存、通信带宽、计算机硬件这类资源，但是通常我们想度量的是<strong>计算时间</strong>。</p>\n<ol start=\"2\">\n<li>达到的目的</li>\n</ol>\n<p>通过分析求解某个问题的几种候选算法，我们可以选出<strong>一种最有效的算法</strong>。</p>\n<ol start=\"3\">\n<li>RAM 模型</li>\n<li>\n<p>指令</p>\n<ul>\n<li>算法指令：加减乘除、取余、向下取整、向上取整</li>\n<li>数据移动指令：装入、存储、复制</li>\n<li>控制指令：条件与无条件转移、子程序调用与返回</li>\n</ul>\n</li>\n<li>内存：不试图对内存层次进行建模</li>\n</ol>\n<h2 id=\"设计算法\" style=\"position:relative;\"><a href=\"#%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95\" aria-label=\"设计算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>设计算法</h2>\n<h3 id=\"增量\" style=\"position:relative;\"><a href=\"#%E5%A2%9E%E9%87%8F\" aria-label=\"增量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>增量</h3>\n<h3 id=\"分治法\" style=\"position:relative;\"><a href=\"#%E5%88%86%E6%B2%BB%E6%B3%95\" aria-label=\"分治法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分治法</h3>\n<p>分治模式的步骤：</p>\n<ol>\n<li>分解</li>\n</ol>\n<p>分解原问题为若干子问题，这些子问题是原问题的<strong>规模较小</strong>的实例。</p>\n<ol start=\"2\">\n<li>解决</li>\n</ol>\n<p>解决这些子问题，递归地求解各子问题。当子问题的规模足够小，则直接求解。</p>\n<ol start=\"3\">\n<li>合并</li>\n</ol>\n<p>合并这些子问题的解成原问题。</p>","fields":{"slug":"/posts/algorithm/算法基础","tagSlugs":["/tag/读书笔记/"]},"frontmatter":{"date":"2021-05-08 13:40:19","description":"","tags":["读书笔记"],"title":"算法基础","socialImage":{"publicURL":"/static/0249a8579cfb4088acaf23fcac068444/image-2.jpg"}}}},"pageContext":{"slug":"/posts/algorithm/算法基础"}},"staticQueryHashes":["251939775","401334301","825871152"]}